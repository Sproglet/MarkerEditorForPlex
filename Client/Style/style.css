body {
  font-family: sans-serif;
  background-attachment: fixed;
  margin: 0;
  border: 0;
  overflow: auto;
  display: block;
  height: 100vh;
}

.noSelect {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.hidden {
    display: none !important;
}

.italic {
  font-style: italic;
}

form label {
  float: left;
  padding: 3px;
  margin: 5px;
}

form input {
  float: right;
}

input, select {
  padding: 1px;
  margin: 5px;
}

#siteTitle {
  /* To get around margin issues with a 100vh linear gradient background */
  margin-top: 0;
  padding-top: 20px;
}

.formInput {
  padding: 5px;
  overflow: auto;
}

.instructions {
  padding: 0 10px 0 10px;
}

#intro {
  max-width: 1000px;
  text-align: center;
  margin: auto;
}

.inlineButtonHolder {
  display: block;
  margin: auto;
  text-align: center;
}

.inlineButton {
  margin-top: 10px;
  width: 335px;
  border-radius: 5px;
  padding: 1px 5px 1px 5px;
  background: transparent;
}

#libraryList {
  width: 100%;
  margin: auto;
  text-align: center;
}

.fancySelect,
#search {
  padding: 5px;
  border-radius: 5px;
  background: transparent;
  text-align: center;
  font-size: 14pt;
}

.fancySelect {
  min-width: 350px;
}

select:focus,
input:focus {
  border-color: #ff7f00 !important;
}

input:focus-visible {
  outline: none;
}

#searchContainer {
  padding-top: 10px;
  width: 100%;
  text-align: center;
}

#search {
  width: 325px;
  margin: auto;
}

#toplevellist,
#seasonlist,
#episodelist {
  max-width: 1000px;
  margin: auto;
}

.button {
  padding: 0 3px 0 3px;
  display: inline-block;
  line-height: 20px;
  cursor: default;
}

.button:hover:not(.disabled) {
  transition: border .25s,box-shadow .5s;
  opacity: 1;
}

.button.disabled {
  opacity: 50%;
}

.button:focus-visible {
  outline: #ff7f00 solid 1px;
  border-radius: 3px;
}

.button>svg {
  width: 20px;
  height: 20px;
  vertical-align: middle;
}

.buttonTextOnly {
  margin: 3px 1px 3px 1px;
  font-size: 10pt;
}

.buttonTextOnly>span {
  padding-left: 5px;
  padding-right: 5px;
}

.buttonIconAndText, .buttonIconOnly {
  border: 1px solid transparent;
  font-size: 9pt;
  opacity: 0.8;
}

.selected .buttonIconAndText,
.bulkResultRow .buttonTextOnly {
  margin: 0;
}

.buttonIconAndText>span {
  margin-left: 5px;
  vertical-align: middle;
}

.topLevelResult,
.seasonResult,
.baseItemResult,
.bulkResultRow,
.sectionOptionsResultRow {
  display: flex;
  cursor: pointer;
}

.topLevelResult,
.seasonResult,
.bulkResultRow,
.sectionOptionsResultRow {
  justify-content: center;
}

.topLevelResult {
  padding: 10px;
}

.topLevelResult:hover,
.seasonResult:hover,
.baseItemResult:hover,
.bulkResultRow:hover {
  font-weight: bold;
}

.sectionOptionsResultRow {
  font-weight: bold;
}

.topLevelResult>div,
.bulkResultRow>div,
.sectionOptionsResultRow>div {
  flex: 1;
}

.showResultSeasons {
  text-align: center;
}

.showResultEpisodes {
  text-align: right;
}

/* Allow show names to take up 50% of the space, allocating 25% for season counts and marker info. */
.showResult:not(.selected)>.resultTitle {
  flex: 0 1 50%;
}
.showResult:not(.selected)>.showResultEpisodes,
.showResult:not(.selected)>.showResultSeasons {
  flex: 0 1 25%;
}

.seasonResult {
  padding: 10px 10px 10px 20px;
}

/* Allow marker info to shrink to make room for long season titles */
.seasonResult:not(.selected)>.showResultEpisodes {
  flex: 0 1 auto;
}

/* Make back buttons/marker info a fixed width to allow show/season titles to grow. */
.showResult.selected>.showResultEpisodes,
.showResult.selected>.goBack,
.seasonResult.selected>.showResultEpisodes,
.seasonResult.selected>.goBack {
  flex: 0 1 20%;
}

/* Allow bulk action buttons to grow */
.bulkResultRow>.goBack {
  flex: 0 1 auto;
}

.bulkResultRow {
  padding: 5px 10px 5px 20px;
}

.sectionOptionsResultRow {
  padding: 10px 10px 10px 20px;
  line-height: 23px;
}

.bulkActionTitle {
  vertical-align: middle;
}

.seasonResult>div {
  flex: 1;
}

.baseItemResult {
  padding: 5px 10px 5px 10px;
  justify-content: space-between;
}

.episodeName, .movieName {
  padding-left: 10px;
}

.episodeSeparator {
  margin: 1px;
}

.markerExpand {
  height: 12px;
  margin-right: 5px;
  vertical-align: baseline;
  transition: transform 0.15s;
}

.markerExpand.collapsed {
  transform: rotate(-90deg);
  transition: transform 0.15s;
}

.goBack {
  text-align: right;
  line-height: 20px;
}

.goBack>input {
  margin: 0;
  padding: 2px;
}

.goBack>.buttonTextOnly {
  font-weight: bold; /* Always bold to avoid shifting on hover */
}

.selected {
  background: rgba(0,100,0,0.2);
  font-weight: bold;
  line-height: 23px;
  cursor: default;
}

.bulkResultRow {
  line-height: 23px; /* TODO: not this */
}

.selected:hover {
  background: rgba(0,100,0,0.3);
}

.overlayButton {
  padding: 10px;
  border-radius: 3px;
}

.overlayButton:focus {
  border-color:#ff7f00;
}

#helpContainer {
  position: absolute;
  top: 30px;
}

#helpBtn {
  opacity: 0.8;
  cursor: pointer;
}

#helpBtn:hover {
  opacity: 1;
}

#toggleContainer {
  position: absolute;
  top: 30px;
  right: 60px;
}

#darkModeToggle {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 20px;
}

#darkModeCheckbox {
  display: none;
  width: 0;
  height: 0;
}

.toggle {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background-color: #a1a1a1;
  -webkit-transition: 0.3s;
  transition: 0.3s;
  cursor: pointer;
  border-radius: 16px;
}

.toggle::before {
  position: absolute;
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: black;
  border-radius: 50%;
  -webkit-transition: 0.3s;
  transition: 0.3s;
  content: "";
}

#darkModeCheckbox:checked + .toggle {
  background-color: #616191;
}

#darkModeCheckbox:focus + .toggle {
  box-shadow: 0 0 1px #616191;
}

#darkModeCheckbox:checked + .toggle:before {
  -webkit-transform: translateX(30px);
  -ms-transform: translateX(30px);
  transform: translateX(30px);
}

#purgeContainer h1, h2 {
  text-align: center;
}

#purgeContainer hr {
  width: 60%;
  min-width: 600px;
  margin-top: 15px;
}

#purgeContainer .buttonContainer {
  text-align: center;
  width: auto;
}

#purgeContainer .buttonContainer input[type=button] {
  border-radius: 3px;
  padding: 4px;
}

#purgeResolutionContainer {
  text-align: center;
  width: 60%;
  min-width: 600px;
  margin: auto;
  margin-bottom: 20px;
}

#purgeResolutionDescription {
  size: 10pt;
}

#helpOverlayHolder {
  text-align: center;
  max-width: 600px;
  margin: auto;
}

#overlayDeleteMarker,
#exportConfirmBtn {
  margin-right: 10px;
}

#deleteMarkerCancel {
  margin-left: 10px;
}

.purgedIcon {
  width: 18px;
  padding-left: 2px;
  vertical-align: text-top;
}

.bulkActionEpisodeColumn {
  max-width: 400px
}

#updateBar {
  top: 0;
  left: 0;
  width: auto;
  padding-bottom: 10px;
  text-align: center;
  line-height: 30px;
  overflow: auto;
}

#updateBar * {
  vertical-align: middle;
}

#updateString {
  margin-right: 20px;
}

#updateRemindLabel {
  margin-left: 30px;
}

.filterActive {
  background-color: rgba(0, 140, 0, 0.5);
  border-radius: 5px;
}

.filteredGroupIndicator {
  opacity: 0.7;
  margin-right: 5px;
  vertical-align: text-top;
}

.filterMultiInput {
  float: right;
}

/* TODO: Not this. Need better separation from settings dialog/a shared base class */
.filterSelect, .filterNumberInput {
  float: unset !important;
}

.sectionOptionsOverlayContainer {
  max-width: 600px;
  margin: auto;
  text-align: center;
  background: rgba(0,0,0,0.4);
  padding: 20px;
}

.sectionOptionsOverlayBtn {
  width: 60%;
  min-width: 200px;
  size: larger;
  clear: both;
  text-align: center;
  padding-top: 10px;
  padding-bottom: 10px;
}

.inlineLoadingIcon {
  margin-right: 10px;
  vertical-align: bottom;
}

#chapterZone select {
  max-width: 250px; /** Don't get too crazy with extremely long episode/chapter titles */
}

.errorToast {
  position: fixed;
  top: 20px;
  left: 20px;
  padding: 15px;
  max-width: 300px;
  background-color: var(--error-background);
  border: 1px solid var(--error-border);
  border-radius: 3px;
  opacity: 0;
  font-size: smaller;
}

.themeIconStandard {
  color: var(--theme-standard);
}

.themeIconGreen {
  color: var(--theme-green);
}

.themeIconRed {
  color: var(--theme-red);
  fill: var(--theme-red);
}

.themeIconOrange {
  color: var(--theme-orange);
}

/* #616161C1 == rgba(97, 97, 97, 0.76)
/* firefox */
:root {
  scrollbar-width: thin !important;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  border-radius: 5px;
  background: rgba(97, 97, 97, 0.76);
  opacity: 0.5;
}

/* corner */
::-webkit-scrollbar-corner {
  background: rgba(97, 97, 97, 0.76);
  border: none;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
   background: rgba(129, 129, 129, 0.76); /* #818181C1 */
}

@media (min-width: 767px) { /* Probably not a phone */
  /* width*/
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  /* Force the vertical scrollbar to always be visible to avoid horizontal shifts when the scrollbar
     appears/disappears. There are some behavioral tradeoffs here (content is slightly off-center when
     no scrollbar is visible, but the lack of shifting wins for me. */
  body {
    overflow-y: scroll;
  }

  #helpContainer {
    right: 30px;
  }
}

@media all and (max-width: 767px) { /* Probably a phone */
  /* width*/
  ::-webkit-scrollbar {
    width: 3px;
    height: 3px;
  }

  /* Toggle can overlap the header on mobile devices.
   * This isn't really a mobile-friendly site, but try not to completely break it. */
  #darkModeToggle {
    display: none;
  }

  /* The help button runs into the same issues as the theme toggle.
   * We don't want to hide it though, so just adjust its right margin to give it more room. */
  #helpContainer {
    right: 10px;
  }
}
